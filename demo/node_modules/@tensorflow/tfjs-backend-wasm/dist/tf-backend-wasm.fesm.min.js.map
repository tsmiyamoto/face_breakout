{"version":3,"file":"tf-backend-wasm.fesm.min.js","sources":["../src/kernels/types.ts","../src/kernels/_FusedMatMul.ts","../src/kernels/unary_kernel.ts","../src/kernels/Abs.ts","../src/kernels/binary_kernel.ts","../src/kernels/Add.ts","../src/kernels/AddN.ts","../src/kernels/Identity.ts","../src/kernels/Transpose.ts","../src/kernels/kernel_utils.ts","../src/kernels/All.ts","../src/kernels/Any.ts","../src/kernels/ArgMax.ts","../src/kernels/AvgPool.ts","../src/kernels/Reshape.ts","../src/kernels/BatchMatMul.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js","../src/kernels/Slice.ts","../src/kernels/BatchToSpaceND.ts","../src/kernels/Cast.ts","../src/kernels/Ceil.ts","../src/kernels/ClipByValue.ts","../src/kernels/Concat.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js","../src/kernels/Conv2D.ts","../src/kernels/Conv2DBackpropInput.ts","../src/kernels/Cos.ts","../src/kernels/Cosh.ts","../src/kernels/CropAndResize.ts","../src/kernels/Cumsum.ts","../src/kernels/DepthToSpace.ts","../src/kernels/DepthwiseConv2dNative.ts","../src/kernels/Elu.ts","../src/kernels/Equal.ts","../src/kernels/Exp.ts","../src/kernels/ExpandDims.ts","../src/kernels/Fill.ts","../src/kernels/FlipLeftRight.ts","../src/kernels/Floor.ts","../src/kernels/FloorDiv.ts","../src/kernels/FusedBatchNorm.ts","../src/kernels/FusedConv2D.ts","../src/kernels/FusedDepthwiseConv2D.ts","../src/kernels/GatherNd.ts","../src/kernels/GatherV2.ts","../src/kernels/Greater.ts","../src/kernels/GreaterEqual.ts","../src/kernels/LeakyRelu.ts","../src/kernels/Less.ts","../src/kernels/LessEqual.ts","../src/kernels/Log.ts","../src/kernels/LogicalAnd.ts","../src/kernels/Max.ts","../src/kernels/Maximum.ts","../src/kernels/MaxPool.ts","../src/kernels/Mean.ts","../src/kernels/Min.ts","../src/kernels/Minimum.ts","../src/kernels/MirrorPad.ts","../src/kernels/Multiply.ts","../src/kernels/Neg.ts","../src/kernels/NonMaxSuppression_util.ts","../src/kernels/NonMaxSuppressionV3.ts","../src/kernels/NonMaxSuppressionV4.ts","../src/kernels/NonMaxSuppressionV5.ts","../src/kernels/NotEqual.ts","../src/kernels/OneHot.ts","../src/kernels/OnesLike.ts","../src/kernels/Pack.ts","../src/kernels/PadV2.ts","../src/kernels/Pow.ts","../src/kernels/Prelu.ts","../src/kernels/Prod.ts","../src/kernels/Range.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js","../src/kernels/RealDiv.ts","../src/kernels/Relu.ts","../src/kernels/Relu6.ts","../src/kernels/ResizeBilinear.ts","../src/kernels/Reverse.ts","../src/kernels/RotateWithOffset.ts","../src/kernels/Round.ts","../src/kernels/Rsqrt.ts","../src/kernels/ScatterNd.ts","../src/kernels/Select.ts","../src/kernels/Sigmoid.ts","../src/kernels/Sin.ts","../src/kernels/Softmax.ts","../src/kernels/SpaceToBatchND.ts","../src/kernels/SplitV.ts","../src/kernels/Sqrt.ts","../src/kernels/Square.ts","../src/kernels/SquaredDifference.ts","../src/kernels/Step.ts","../src/kernels/StridedSlice.ts","../src/kernels/Sub.ts","../src/kernels/Sum.ts","../src/kernels/Tan.ts","../src/kernels/Tanh.ts","../src/kernels/Tile.ts","../src/kernels/TopK.ts","../src/kernels/Transform.ts","../src/kernels/ZerosLike.ts","../src/register_all_kernels.ts","../src/kernels/Unpack.ts","../src/flags_wasm.ts","../wasm-out/tfjs-backend-wasm-threaded-simd.js","../wasm-out/tfjs-backend-wasm.js","../src/backend_wasm.ts","../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js","../src/version.ts","../src/base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3,\n  leakyrelu = 4,\n  sigmoid = 5,\n  elu = 6\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul:\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n     transposeB: boolean, activation: number, biasId: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createUnaryKernelConfig(\n    kernelName: string, outType?: DataType): KernelConfig {\n  let wasmFunc: (xId: number, dtype: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // x_id\n      'number',  // dtype\n      'number',  // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, outType || x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, CppDType[x.dtype], outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    // Currently only some float operations support full broadcast.\n    if (supportsFullBroadcast && a.dtype === 'float32') {\n      kernelFunc();\n      return out;\n    }\n\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n    if (loopsOverAllOfA && loopsOverAllOfB) {\n      kernelFunc();\n      return out;\n    } else {\n      throw new Error(\n          `Broadcasting along outer dims is not yet ` +\n          `supported for ${a.dtype} ${kernelName}.`);\n    }\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as {} as KernelFunc,\n  setupFunc: setup,\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAll: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\n\nfunction all(args: {backend: BackendWasm, inputs: AllInputs, attrs: AllAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const allConfig: KernelConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAny: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\n\nfunction any(args: {backend: BackendWasm, inputs: AnyInputs, attrs: AnyAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAny(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const anyConfig: KernelConfig = {\n  kernelName: Any,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: any as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {backend, inputs, attrs} = args;\n  const {axis} = attrs as {} as ArgMaxAttrs;\n  const {x} = inputs as {} as ArgMaxInputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const outShape = input.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = input.shape[axes[0]];\n  wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  return out;\n}\n\nexport const argMaxConfig: KernelConfig = {\n  kernelName: ArgMax,\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs;\n  const {shape} = attrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n\n  util.assert(\n      xSize === util.sizeFromShape($shape),\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const batchDimsCompatible =\n      batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n\n  util.assert(\n      aRank >= 2 && bRank >= 2 && batchDimsCompatible,\n      () => `Error in matMul: the input batch dimensions must either be the ` +\n          `same or at least one input batch dimension must be 1. Got input ` +\n          `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\n\n  const outShapeOuterDims =\n      batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n\n  wasmBatchMatMul(\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\n      b3d.shape.length, transposeA, transposeB, outId);\n\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n\n  out.shape = outShape;\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function sliceImpl(vals, begin, size, shape, dtype) {\n    const isContinous = slice_util.isSliceContinous(shape, begin, size);\n    const length = util.sizeFromShape(size);\n    const xStrides = util.computeStrides(shape);\n    if (isContinous) {\n        const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n        if (dtype === 'string') {\n            return vals.slice(flatOffset, flatOffset + length);\n        }\n        return vals.subarray(flatOffset, flatOffset + length);\n    }\n    const decodedData = dtype === 'string' ?\n        backend_util.fromUint8ToStringArray(vals) :\n        vals;\n    const inBuf = buffer(shape, dtype, decodedData);\n    const outBuf = buffer(size, dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\n    }\n    if (dtype === 'string') {\n        return backend_util.fromStringArrayToUint8(outBuf.values);\n    }\n    return outBuf.values;\n}\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    assertNotComplex(x, 'slice');\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    const vals = backend.data.get(x.dataId).values;\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'cpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtY3B1L3NyYy9rZXJuZWxzL1NsaWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQWlCLE1BQU0sRUFBc0MsS0FBSyxFQUFFLFVBQVUsRUFBbUQsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHeEwsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRTdDLE1BQU0sVUFBVSxTQUFTLENBQ3JCLElBQW1CLEVBQUUsS0FBZSxFQUFFLElBQWMsRUFBRSxLQUFlLEVBQ3JFLEtBQWU7SUFDakIsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDcEUsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTVDLElBQUksV0FBVyxFQUFFO1FBQ2YsTUFBTSxVQUFVLEdBQUcsVUFBVSxDQUFDLGlCQUFpQixDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztRQUVqRSxJQUFJLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDdEIsT0FBUSxJQUFxQixDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsVUFBVSxHQUFHLE1BQU0sQ0FBQyxDQUFDO1NBQ3RFO1FBRUQsT0FBUSxJQUFtQixDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsVUFBVSxHQUFHLE1BQU0sQ0FBQyxDQUFDO0tBQ3ZFO0lBRUQsTUFBTSxXQUFXLEdBQUcsS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDO1FBQ3BDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFvQixDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFrQixDQUFDO0lBRXZCLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDbkMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUU7UUFDcEMsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwQyxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdELE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUM7S0FDNUM7SUFFRCxJQUFJLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDdEIsT0FBTyxZQUFZLENBQUMsc0JBQXNCLENBQUMsTUFBTSxDQUFDLE1BQWtCLENBQUMsQ0FBQztLQUN2RTtJQUNELE9BQU8sTUFBTSxDQUFDLE1BQW9CLENBQUM7QUFDckMsQ0FBQztBQUVELE1BQU0sVUFBVSxLQUFLLENBQ2pCLElBQXVFO0lBRXpFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ25CLE1BQU0sRUFBQyxLQUFLLEVBQUUsSUFBSSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRTVCLGdCQUFnQixDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUU3QixNQUFNLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxHQUFHLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3BFLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRS9DLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDL0MsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pFLE9BQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUN6RCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsS0FBSztJQUNsQixVQUFVLEVBQUUsS0FBeUI7Q0FDdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIEJhY2tlbmRWYWx1ZXMsIGJ1ZmZlciwgRGF0YVR5cGUsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgU2xpY2UsIHNsaWNlX3V0aWwsIFNsaWNlQXR0cnMsIFNsaWNlSW5wdXRzLCBUZW5zb3JJbmZvLCBUeXBlZEFycmF5LCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge01hdGhCYWNrZW5kQ1BVfSBmcm9tICcuLi9iYWNrZW5kX2NwdSc7XG5pbXBvcnQge2Fzc2VydE5vdENvbXBsZXh9IGZyb20gJy4uL2NwdV91dGlsJztcblxuZXhwb3J0IGZ1bmN0aW9uIHNsaWNlSW1wbChcbiAgICB2YWxzOiBCYWNrZW5kVmFsdWVzLCBiZWdpbjogbnVtYmVyW10sIHNpemU6IG51bWJlcltdLCBzaGFwZTogbnVtYmVyW10sXG4gICAgZHR5cGU6IERhdGFUeXBlKTogQmFja2VuZFZhbHVlcyB7XG4gIGNvbnN0IGlzQ29udGlub3VzID0gc2xpY2VfdXRpbC5pc1NsaWNlQ29udGlub3VzKHNoYXBlLCBiZWdpbiwgc2l6ZSk7XG4gIGNvbnN0IGxlbmd0aCA9IHV0aWwuc2l6ZUZyb21TaGFwZShzaXplKTtcbiAgY29uc3QgeFN0cmlkZXMgPSB1dGlsLmNvbXB1dGVTdHJpZGVzKHNoYXBlKTtcblxuICBpZiAoaXNDb250aW5vdXMpIHtcbiAgICBjb25zdCBmbGF0T2Zmc2V0ID0gc2xpY2VfdXRpbC5jb21wdXRlRmxhdE9mZnNldChiZWdpbiwgeFN0cmlkZXMpO1xuXG4gICAgaWYgKGR0eXBlID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuICh2YWxzIGFzIFVpbnQ4QXJyYXlbXSkuc2xpY2UoZmxhdE9mZnNldCwgZmxhdE9mZnNldCArIGxlbmd0aCk7XG4gICAgfVxuXG4gICAgcmV0dXJuICh2YWxzIGFzIFR5cGVkQXJyYXkpLnN1YmFycmF5KGZsYXRPZmZzZXQsIGZsYXRPZmZzZXQgKyBsZW5ndGgpO1xuICB9XG5cbiAgY29uc3QgZGVjb2RlZERhdGEgPSBkdHlwZSA9PT0gJ3N0cmluZycgP1xuICAgICAgYmFja2VuZF91dGlsLmZyb21VaW50OFRvU3RyaW5nQXJyYXkodmFscyBhcyBVaW50OEFycmF5W10pIDpcbiAgICAgIHZhbHMgYXMgVHlwZWRBcnJheTtcblxuICBjb25zdCBpbkJ1ZiA9IGJ1ZmZlcihzaGFwZSwgZHR5cGUsIGRlY29kZWREYXRhKTtcbiAgY29uc3Qgb3V0QnVmID0gYnVmZmVyKHNpemUsIGR0eXBlKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBvdXRCdWYuc2l6ZTsgKytpKSB7XG4gICAgY29uc3Qgb3V0TG9jID0gb3V0QnVmLmluZGV4VG9Mb2MoaSk7XG4gICAgY29uc3QgaW5Mb2MgPSBvdXRMb2MubWFwKChpZHg6IG51bWJlciwgaikgPT4gaWR4ICsgYmVnaW5bal0pO1xuICAgIG91dEJ1Zi5zZXQoaW5CdWYuZ2V0KC4uLmluTG9jKSwgLi4ub3V0TG9jKTtcbiAgfVxuXG4gIGlmIChkdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gYmFja2VuZF91dGlsLmZyb21TdHJpbmdBcnJheVRvVWludDgob3V0QnVmLnZhbHVlcyBhcyBzdHJpbmdbXSk7XG4gIH1cbiAgcmV0dXJuIG91dEJ1Zi52YWx1ZXMgYXMgVHlwZWRBcnJheTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNsaWNlKFxuICAgIGFyZ3M6IHtpbnB1dHM6IFNsaWNlSW5wdXRzLCBiYWNrZW5kOiBNYXRoQmFja2VuZENQVSwgYXR0cnM6IFNsaWNlQXR0cnN9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7YmVnaW4sIHNpemV9ID0gYXR0cnM7XG5cbiAgYXNzZXJ0Tm90Q29tcGxleCh4LCAnc2xpY2UnKTtcblxuICBjb25zdCBbJGJlZ2luLCAkc2l6ZV0gPSBzbGljZV91dGlsLnBhcnNlU2xpY2VQYXJhbXMoeCwgYmVnaW4sIHNpemUpO1xuICBzbGljZV91dGlsLmFzc2VydFBhcmFtc1ZhbGlkKHgsICRiZWdpbiwgJHNpemUpO1xuXG4gIGNvbnN0IHZhbHMgPSBiYWNrZW5kLmRhdGEuZ2V0KHguZGF0YUlkKS52YWx1ZXM7XG4gIGNvbnN0IG91dFZhbHMgPSBzbGljZUltcGwodmFscywgJGJlZ2luLCAkc2l6ZSwgeC5zaGFwZSwgeC5kdHlwZSk7XG4gIHJldHVybiBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKCRzaXplLCB4LmR0eXBlLCBvdXRWYWxzKTtcbn1cblxuZXhwb3J0IGNvbnN0IHNsaWNlQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFNsaWNlLFxuICBiYWNrZW5kTmFtZTogJ2NwdScsXG4gIGtlcm5lbEZ1bmM6IHNsaWNlIGFzIHt9IGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {sliceImplCPU} from '../kernel_utils/shared';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n\n    if (x.dtype === 'string') {\n      outData.stringBytes =\n          (xVals as Uint8Array[])\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(\n          (xVals as TypedArray)\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n\n    return out;\n  }\n\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res as Uint8Array[];\n    return out;\n  }\n\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    const res =\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\n    outVals.set(res);\n  }\n\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\nimport {transpose} from './Transpose';\n\nfunction batchToSpaceND(args: {\n  inputs: BatchToSpaceNDInputs,\n  backend: BackendWasm,\n  attrs: BatchToSpaceNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, crops} = attrs;\n\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted =\n      backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords =\n      backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize =\n      backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n  const xReshaped = reshape({inputs: {x}, backend, attrs: {shape: reshaped}});\n  const xTransposed =\n      transpose({inputs: {x: xReshaped}, backend, attrs: {perm: permuted}});\n  const xTransposedReshaped = reshape(\n      {inputs: {x: xTransposed}, backend, attrs: {shape: reshapedPermuted}});\n  const result = slice({\n    inputs: {x: xTransposedReshaped},\n    backend,\n    attrs: {begin: sliceBeginCoords, size: sliceSize}\n  });\n\n  backend.disposeData(xReshaped.dataId);\n  backend.disposeData(xTransposed.dataId);\n  backend.disposeData(xReshaped.dataId);\n\n  return result;\n}\n\nexport const batchToSpaceNDConfig: KernelConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'wasm',\n  kernelFunc: batchToSpaceND as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {concatImplCPU} from '../kernel_utils/shared';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n\n  const shapes = $inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\n    });\n\n    const inputsValShapes = inputs2D.map(t => {\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\n    });\n\n    // Concats 2d tensors along axis=1.\n    outShape =\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(\n                        inputsValShapes, outShape, inputs[0].dtype,\n                        simplyConcat) as string[];\n\n    const finalOutShape =\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n\n    return out;\n  }\n\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nexport function concatImpl(inputs, outShape, dtype, simplyConcat) {\n    const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n    if (simplyConcat && dtype !== 'string') {\n        // Use built-in TypedArray.set() method for speed.\n        let offset = 0;\n        inputs.forEach(input => {\n            const size = util.sizeFromShape(input.shape);\n            outVals.set(input.vals, offset);\n            offset += size;\n        });\n    }\n    else {\n        let colOffset = 0;\n        inputs.forEach(input => {\n            const decodedData = dtype === 'string' ?\n                backend_util.fromUint8ToStringArray(input.vals) :\n                input.vals;\n            let tIdx = 0;\n            for (let row = 0; row < input.shape[0]; ++row) {\n                const resIdx = row * outShape[1] + colOffset;\n                for (let col = 0; col < input.shape[1]; ++col) {\n                    outVals[resIdx + col] = decodedData[tIdx++];\n                }\n            }\n            colOffset += input.shape[1];\n        });\n    }\n    return outVals;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uY2F0X2ltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtY3B1L3NyYy9rZXJuZWxzL0NvbmNhdF9pbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQXVDLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRTlGLE1BQU0sVUFBVSxVQUFVLENBQ3RCLE1BQXFELEVBQUUsUUFBa0IsRUFDekUsS0FBZSxFQUFFLFlBQXFCO0lBQ3hDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBRTVFLElBQUksWUFBWSxJQUFJLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDdEMsa0RBQWtEO1FBQ2xELElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQztRQUNmLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDckIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7WUFFNUMsT0FBc0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQWtCLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDOUQsTUFBTSxJQUFJLElBQUksQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztLQUNKO1NBQU07UUFDTCxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFFbEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyQixNQUFNLFdBQVcsR0FBRyxLQUFLLEtBQUssUUFBUSxDQUFDLENBQUM7Z0JBQ3BDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsSUFBb0IsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pFLEtBQUssQ0FBQyxJQUFrQixDQUFDO1lBRTdCLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQztZQUViLEtBQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFO2dCQUM3QyxNQUFNLE1BQU0sR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQztnQkFDN0MsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUU7b0JBQzdDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLEdBQUcsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7aUJBQzdDO2FBQ0Y7WUFFRCxTQUFTLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QixDQUFDLENBQUMsQ0FBQztLQUNKO0lBRUQsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIEJhY2tlbmRWYWx1ZXMsIERhdGFUeXBlLCBUeXBlZEFycmF5LCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0SW1wbChcbiAgICBpbnB1dHM6IEFycmF5PHt2YWxzOiBCYWNrZW5kVmFsdWVzLCBzaGFwZTogbnVtYmVyW119Piwgb3V0U2hhcGU6IG51bWJlcltdLFxuICAgIGR0eXBlOiBEYXRhVHlwZSwgc2ltcGx5Q29uY2F0OiBib29sZWFuKTogVHlwZWRBcnJheXxzdHJpbmdbXSB7XG4gIGNvbnN0IG91dFZhbHMgPSB1dGlsLmdldEFycmF5RnJvbURUeXBlKGR0eXBlLCB1dGlsLnNpemVGcm9tU2hhcGUob3V0U2hhcGUpKTtcblxuICBpZiAoc2ltcGx5Q29uY2F0ICYmIGR0eXBlICE9PSAnc3RyaW5nJykge1xuICAgIC8vIFVzZSBidWlsdC1pbiBUeXBlZEFycmF5LnNldCgpIG1ldGhvZCBmb3Igc3BlZWQuXG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgaW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgY29uc3Qgc2l6ZSA9IHV0aWwuc2l6ZUZyb21TaGFwZShpbnB1dC5zaGFwZSk7XG5cbiAgICAgIChvdXRWYWxzIGFzIFR5cGVkQXJyYXkpLnNldChpbnB1dC52YWxzIGFzIFR5cGVkQXJyYXksIG9mZnNldCk7XG4gICAgICBvZmZzZXQgKz0gc2l6ZTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBsZXQgY29sT2Zmc2V0ID0gMDtcblxuICAgIGlucHV0cy5mb3JFYWNoKGlucHV0ID0+IHtcbiAgICAgIGNvbnN0IGRlY29kZWREYXRhID0gZHR5cGUgPT09ICdzdHJpbmcnID9cbiAgICAgICAgICBiYWNrZW5kX3V0aWwuZnJvbVVpbnQ4VG9TdHJpbmdBcnJheShpbnB1dC52YWxzIGFzIFVpbnQ4QXJyYXlbXSkgOlxuICAgICAgICAgIGlucHV0LnZhbHMgYXMgVHlwZWRBcnJheTtcblxuICAgICAgbGV0IHRJZHggPSAwO1xuXG4gICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBpbnB1dC5zaGFwZVswXTsgKytyb3cpIHtcbiAgICAgICAgY29uc3QgcmVzSWR4ID0gcm93ICogb3V0U2hhcGVbMV0gKyBjb2xPZmZzZXQ7XG4gICAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGlucHV0LnNoYXBlWzFdOyArK2NvbCkge1xuICAgICAgICAgIG91dFZhbHNbcmVzSWR4ICsgY29sXSA9IGRlY29kZWREYXRhW3RJZHgrK107XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29sT2Zmc2V0ICs9IGlucHV0LnNoYXBlWzFdO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIG91dFZhbHM7XG59XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Cosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const coshConfig: KernelConfig = createUnaryKernelConfig(Cosh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumsum(\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n             permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthToSpace: (\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\n    outSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n    'number',  // xId\n    'number',  // blockSize\n    'number',  // channelsLast\n    'array',   // xStrides\n    'number',  // xStridesLength\n    'array',   // outputShape\n    'array',   // outputStrides\n    'number',  // outSize\n    'number',  // outId\n  ]);\n}\n\nexport function depthToSpace(args: {\n  backend: BackendWasm,\n  inputs: DepthToSpaceInputs,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const out = backend.makeOutput(outputShape, 'float32');\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\n\n  return out;\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Elu, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const eluConfig: KernelConfig = createUnaryKernelConfig(Elu);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp, 'float32');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  attrs: ExpandDimsAttrs,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value, dtype}, backend} = args;\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFlipLeftRight: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // outId\n  ]);\n}\n\nexport function flipLeftRight(\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\n  const {inputs, backend} = args;\n  const {image} = inputs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  wasmFlipLeftRight(\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // leakyreluAlpha\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params, indices);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {CppDType} from './types';\n\nlet wasmGather: (\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // batchSize\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  // Throw error when any index is out of bound.\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const indicesVals = backend.readSync(indices.dataId) as TypedArray;\n  const axisDim = x.shape[parsedAxis];\n  for (let i = 0; i < indicesVals.length; ++i) {\n    const index = indicesVals[i];\n    util.assert(\n        index <= axisDim - 1 && index >= 0,\n        () =>\n            `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n  }\n\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\n    backend\n  });\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\n      shapeInfo.batchSize, outStridesBytes, outId);\n\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, leakyreluAlpha: number, outId: number) => void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // leakyrelu_alpha\n    'number',  // out_id\n  ]);\n}\n\nexport function leakyRelu(\n    args:\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  // According to TF API, LeakyRelu returns float32 when input is either float32\n  // or int32.\n  const out = backend.makeOutput(x.shape, 'float32');\n\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, CppDType[x.dtype], alpha, outId);\n  }\n\n  return out;\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Max, MaxAttrs, MaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMax: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  // TF API supports int32 input. CPU and WebGL backend also support int32\n  // input. WASM backend doesn't support it because it uses xnnpack which only\n  // supports float32.\n  //\n  // Add the following assert only for the WASM backend instead of at core op\n  // level.\n  //\n  // TODO: add support for int32 input.\n  util.assert(\n      x.dtype === 'float32',\n      () =>\n          `Error in MaxPool: only float32 input is supported. Got ${x.dtype}.`);\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMean =\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\n\nexport function mean(\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput =\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n\n  return out;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMin: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\n// Must match enum in MirrorPad.cc\nenum MirrorPaddingMode {\n  reflect = 0,\n  symmetric = 1\n}\n\nlet wasmMirrorPad: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array, mode: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // mode\n    'number',  // outId\n  ]);\n}\n\nfunction mirrorPad(args: {\n  inputs: MirrorPadInputs,\n  backend: BackendWasm,\n  attrs: MirrorPadAttrs\n}) {\n  const {inputs: {x}, backend, attrs: {paddings, mode}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmMirrorPad(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, MirrorPaddingMode[mode], outId);\n  return out;\n}\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'wasm',\n  kernelFunc: mirrorPad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\n\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {fill} from './Fill';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n\n  if (util.sizeFromShape(x.shape) === 0) {\n    // Short-circuit the computation, since x doesn't have value, only\n    // the shape is used to compute output shape to pad.\n    return fill({\n      backend,\n      attrs: {shape: outShape, value: constantValue, dtype: x.dtype}\n    });\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outTensorData = backend.dataIdMap.get(out.dataId);\n  const outId = outTensorData.id;\n\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  let inputId = xId;\n  const input = x;\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(inputId, weightsId, outId);\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nimport {CppDType} from './types';\n\nlet wasmProd: (\n    xId: number, reduceSize: number,\n    dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n    'number',\n    'number',\n    'number',\n    'number'\n  ]);\n}\n\nfunction prod(args: {\n  backend: BackendWasm,\n  inputs: ProdInputs,\n  attrs: ProdAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {rangeImplCPU} from '../kernel_utils/shared';\n\nexport const range =\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\n      const {backend, attrs} = args;\n      const {start, stop, step, dtype} = attrs;\n      const values = rangeImplCPU(start, stop, step, dtype);\n\n      const out = backend.makeOutput([values.length], dtype);\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(values);\n      return out;\n    };\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function rangeImpl(start, stop, step, dtype) {\n    const sameStartStop = start === stop;\n    const increasingRangeNegativeStep = start < stop && step < 0;\n    const decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return util.makeZerosTypedArray(0, dtype);\n    }\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\n    const values = util.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFuZ2VfaW1wbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC1jcHUvc3JjL2tlcm5lbHMvUmFuZ2VfaW1wbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWMsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFeEQsTUFBTSxVQUFVLFNBQVMsQ0FDckIsS0FBYSxFQUFFLElBQVksRUFBRSxJQUFZLEVBQ3pDLEtBQXdCO0lBQzFCLE1BQU0sYUFBYSxHQUFHLEtBQUssS0FBSyxJQUFJLENBQUM7SUFDckMsTUFBTSwyQkFBMkIsR0FBRyxLQUFLLEdBQUcsSUFBSSxJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDN0QsTUFBTSwyQkFBMkIsR0FBRyxJQUFJLEdBQUcsS0FBSyxJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFFN0QsSUFBSSxhQUFhLElBQUksMkJBQTJCO1FBQzVDLDJCQUEyQixFQUFFO1FBQy9CLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMzQztJQUVELE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQy9ELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFNUQsSUFBSSxJQUFJLEdBQUcsS0FBSyxJQUFJLElBQUksS0FBSyxDQUFDLEVBQUU7UUFDOUIsb0RBQW9EO1FBQ3BELG9CQUFvQjtRQUNwQixJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDWDtJQUVELE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDdEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO0tBQ2xDO0lBQ0QsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtEYXRhVHlwZU1hcCwgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJhbmdlSW1wbChcbiAgICBzdGFydDogbnVtYmVyLCBzdG9wOiBudW1iZXIsIHN0ZXA6IG51bWJlcixcbiAgICBkdHlwZTogJ2Zsb2F0MzInfCdpbnQzMicpOiBEYXRhVHlwZU1hcFsnZmxvYXQzMicgfCAnaW50MzInXSB7XG4gIGNvbnN0IHNhbWVTdGFydFN0b3AgPSBzdGFydCA9PT0gc3RvcDtcbiAgY29uc3QgaW5jcmVhc2luZ1JhbmdlTmVnYXRpdmVTdGVwID0gc3RhcnQgPCBzdG9wICYmIHN0ZXAgPCAwO1xuICBjb25zdCBkZWNyZWFzaW5nUmFuZ2VQb3NpdGl2ZVN0ZXAgPSBzdG9wIDwgc3RhcnQgJiYgc3RlcCA+IDE7XG5cbiAgaWYgKHNhbWVTdGFydFN0b3AgfHwgaW5jcmVhc2luZ1JhbmdlTmVnYXRpdmVTdGVwIHx8XG4gICAgICBkZWNyZWFzaW5nUmFuZ2VQb3NpdGl2ZVN0ZXApIHtcbiAgICByZXR1cm4gdXRpbC5tYWtlWmVyb3NUeXBlZEFycmF5KDAsIGR0eXBlKTtcbiAgfVxuXG4gIGNvbnN0IG51bUVsZW1lbnRzID0gTWF0aC5hYnMoTWF0aC5jZWlsKChzdG9wIC0gc3RhcnQpIC8gc3RlcCkpO1xuICBjb25zdCB2YWx1ZXMgPSB1dGlsLm1ha2VaZXJvc1R5cGVkQXJyYXkobnVtRWxlbWVudHMsIGR0eXBlKTtcblxuICBpZiAoc3RvcCA8IHN0YXJ0ICYmIHN0ZXAgPT09IDEpIHtcbiAgICAvLyBBdXRvIGFkanVzdCB0aGUgc3RlcCdzIHNpZ24gaWYgaXQgaGFzbid0IGJlZW4gc2V0XG4gICAgLy8gKG9yIHdhcyBzZXQgdG8gMSlcbiAgICBzdGVwID0gLTE7XG4gIH1cblxuICB2YWx1ZXNbMF0gPSBzdGFydDtcbiAgZm9yIChsZXQgaSA9IDE7IGkgPCB2YWx1ZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YWx1ZXNbaV0gPSB2YWx1ZXNbaSAtIDFdICsgc3RlcDtcbiAgfVxuICByZXR1cm4gdmFsdWVzO1xufVxuIl19","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const realDivConfig: KernelConfig =\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number',  // halfPixelCenters\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nfunction softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, ReshapeAttrs, ReshapeInputs, SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs, TensorInfo, TransposeAttrs, TransposeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {padV2Config} from './PadV2';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nfunction spaceToBatchND(args: {\n  inputs: SpaceToBatchNDInputs,\n  backend: BackendWasm,\n  attrs: SpaceToBatchNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, paddings} = attrs;\n\n  const prod = util.sizeFromShape(blockShape);\n\n  const completePaddings: Array<[number, number]> = [[0, 0]];\n  completePaddings.push(...(paddings as Array<[number, number]>));\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {x},\n    backend,\n    attrs: {paddings: completePaddings, constantValue: 0}\n  }) as TensorInfo;\n\n  const reshapedPaddedShape =\n      backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(\n      reshapedPaddedShape.length, blockShape.length, false);\n\n  const flattenShape =\n      backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n\n  const reshapeInputs: ReshapeInputs = {x: paddedX};\n  const reshapeAttrs: ReshapeAttrs = {shape: reshapedPaddedShape};\n  const paddedXReshaped =\n      reshape({inputs: reshapeInputs, backend, attrs: reshapeAttrs});\n\n  const transposeInputs: TransposeInputs = {x: paddedXReshaped};\n  const transposeAttrs:\n      TransposeAttrs = {perm: permutedReshapedPaddedPermutation};\n  const paddedXT =\n      transpose({inputs: transposeInputs, backend, attrs: transposeAttrs});\n\n  const resultReshapeInputs: ReshapeInputs = {x: paddedXT};\n  const resultReshapeAttrs: ReshapeAttrs = {shape: flattenShape};\n  const result = reshape(\n      {inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs});\n\n  backend.disposeData(paddedX.dataId);\n  backend.disposeData(paddedXReshaped.dataId);\n  backend.disposeData(paddedXT.dataId);\n\n  return result;\n}\n\nexport const spaceToBatchNDConfig: KernelConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'wasm',\n  kernelFunc: spaceToBatchND as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig: KernelConfig =\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmStep: (xId: number, alpha: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, slice_util, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nlet wasmStridedSlice: (\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n    'number',  // xId\n    'array',   // xStrides\n    'number',  // xRank\n    'array',   // beginBytes\n    'array',   // endBytes\n    'array',   // stridesBytes\n    'array',   // outShapeBytes\n    'array',   // outStridesBytes\n    'number',  // outShapeLength\n    'number',  // outId\n  ]);\n}\n\nexport function stridedSlice(args: {\n  backend: BackendWasm,\n  inputs: StridedSliceInputs,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n\n  const {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  } = attrs;\n\n  const {\n    finalShapeSparse,\n    finalShape,\n    isIdentity,\n    sliceDim0,\n    isSimpleSlice,\n    begin: $begin,\n    end: $end,\n    strides: $strides\n  } =\n      slice_util.sliceInfo(\n          x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask);\n\n  let result;\n\n  if (isIdentity) {\n    // Optimization #1, slice is a no-op plus reshape\n    result = reshape({inputs: {x}, backend, attrs: {shape: finalShape}});\n  } else if (sliceDim0 || isSimpleSlice) {\n    // Optimization #2, slice is memory contiguous (only occurs in dim 0)\n    util.assert(\n        x.shape.length >= 1,\n        () => `Input must have rank at least 1, got: ${x.shape.length}`);\n\n    const size = slice_util.computeOutShape($begin, $end, $strides);\n    // To tolerate begin[0] > end[0] (a 0-output slice), we min(begin, end).\n    const sliced = slice({inputs: {x}, backend, attrs: {begin: $begin, size}});\n    result =\n        reshape({inputs: {x: sliced}, backend, attrs: {shape: finalShape}});\n    backend.disposeData(sliced.dataId);\n  } else {\n    const out = backend.makeOutput(finalShapeSparse, 'float32');\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const xStridesBytes =\n        new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array($begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array($end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array($strides).buffer);\n\n    const outputShapeBytes =\n        new Uint8Array(new Int32Array(finalShapeSparse).buffer);\n    const outStridesBytes = new Uint8Array(\n        new Int32Array(util.computeStrides(finalShapeSparse)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    wasmStridedSlice(\n        xId, xStridesBytes, x.shape.length, beginBytes, endBytes, stridesBytes,\n        outputShapeBytes, outStridesBytes, finalShapeSparse.length, outId);\n\n    result = reshape({inputs: {x: out}, backend, attrs: {shape: finalShape}});\n\n    backend.disposeData(out.dataId);\n  }\n\n  return result;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmSum: (xId: number, reduceSize: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, [\n    'number',  // input_id\n    'number',  // reduce_size\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanConfig: KernelConfig = createUnaryKernelConfig(Tan);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmTopK: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\n    outIndicesId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'number',  // k\n    'bool',    // sorted\n    'number',  // outValuesId\n    'number',  // outIndicesId\n  ]);\n}\n\nexport const topk:\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\n          const {x} = inputs;\n          const {k, sorted} = attrs;\n\n          const xId = backend.dataIdMap.get(x.dataId).id;\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n          const outputShape = x.shape.slice();\n          outputShape[outputShape.length - 1] = k;\n          const outValues = backend.makeOutput(outputShape, x.dtype);\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n          const outIndices = backend.makeOutput(outputShape, 'int32');\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n\n          wasmTopK(\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\n              outValuesId, outIndicesId);\n\n          return [outValues, outIndices];\n        };\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transform, TransformAttrs, TransformInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmTransform: (\n    imageId: number, transformsId: number, isBatchTransform: boolean,\n    batch: number, outHeight: number, outWidth: number, numChannels: number,\n    imageWidth: number, imageHeight: number, strides: Uint8Array,\n    stridesLength: number, interpolationModeId: number, fillModeId: number,\n    fillValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\n    'number',  // imageId\n    'number',  // transformsId\n    'bool',    // isBatchTransform\n    'number',  // batch\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // numChannels\n    'number',  // imageWidth\n    'number',  // imageHeight\n    'array',   // strides\n    'number',  // stridesLength\n    'number',  // interpolationModeId\n    'number',  // fillModeId\n    'number',  // fillValue\n    'number'   // outId\n  ]);\n}\n\nfunction transform(\n    args:\n        {backend: BackendWasm, inputs: TransformInputs, attrs: TransformAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {image, transforms} = inputs;\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] =\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape =\n      [batch, outHeight, outWidth,\n       numChannels] as [number, number, number, number];\n  const strides =\n      new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n\n  const out = backend.makeOutput(outShape, image.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imageData = backend.dataIdMap.get(image.dataId);\n  const imageId = imageData.id;\n\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\n  const transformsId = transformsData.id;\n\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  let fillModeId;\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n    case 'reflect':\n      fillModeId = 2;\n      break;\n    case 'wrap':\n      fillModeId = 3;\n      break;\n    case 'nearest':\n      fillModeId = 4;\n      break;\n    default:\n      fillModeId = 1;\n      break;\n  }\n\n  wasmTransform(\n      imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight,\n      outWidth, numChannels, imageWidth, imageHeight, strides,\n      image.shape.length - 1, interpolationModeId, fillModeId, fillValue,\n      outId);\n\n  return out;\n}\n\nexport const transformConfig: KernelConfig = {\n  kernelName: Transform,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: transform as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {eluConfig} from './kernels/Elu';\nimport {equalConfig} from './kernels/Equal';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {logConfig} from './kernels/Log';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {sinConfig} from './kernels/Sin';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  absConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  avgPoolConfig,\n  batchMatMulConfig,\n  batchToSpaceNDConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumsumConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  eluConfig,\n  equalConfig,\n  expConfig,\n  expandDimsConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedMatMulConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  logConfig,\n  logicalAndConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realDivConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  rsqrtConfig,\n  roundConfig,\n  scatterNdConfig,\n  selectConfig,\n  sigmoidConfig,\n  sinConfig,\n  sliceConfig,\n  softmaxConfig,\n  spaceToBatchNDConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transformConfig,\n  transposeConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ])));\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n","\nvar WasmBackendModuleThreadedSimd = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!==\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};var nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(ENVIRONMENT_IS_NODE){read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret}}else{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance===\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var str=\"\";while(!(idx>=endIdx)){var u0=heap[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer)}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":2147483648/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;if(!ENVIRONMENT_IS_PTHREAD)__ATINIT__.push({func:function(){___wasm_call_ctors()}});function preRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function preMain(){if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){if(ENVIRONMENT_IS_PTHREAD)return;runtimeExited=true}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){assert(!ENVIRONMENT_IS_PTHREAD,\"addRunDependency cannot be used in a pthread worker\");runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(ENVIRONMENT_IS_PTHREAD)console.error(\"Pthread aborting at \"+(new Error).stack);what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmTable=Module[\"asm\"][\"I\"];wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var ASM_CONSTS={10520:function(){throw\"Canceled!\"},10538:function($0,$1){setTimeout(function(){__emscripten_do_dispatch_to_thread($0,$1)},0)}};function initPthreadsJS(){PThread.initRuntime()}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var ERRNO_CODES={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function _emscripten_futex_wake(addr,count){if(addr<=0||addr>GROWABLE_HEAP_I8().length||addr&3!=0||count<0)return-28;if(count==0)return 0;if(count>=2147483647)count=Infinity;var mainThreadWaitAddress=Atomics.load(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2);var mainThreadWoken=0;if(mainThreadWaitAddress==addr){var loadedAddr=Atomics.compareExchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,mainThreadWaitAddress,0);if(loadedAddr==mainThreadWaitAddress){--count;mainThreadWoken=1;if(count<=0)return 1}}var ret=Atomics.notify(GROWABLE_HEAP_I32(),addr>>2,count);if(ret>=0)return ret+mainThreadWoken;throw\"Atomics.notify returned an unexpected value \"+ret}Module[\"_emscripten_futex_wake\"]=_emscripten_futex_wake;function killThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in killThread!\";GROWABLE_HEAP_I32()[pthread_ptr+12>>2]=0;var pthread=PThread.pthreads[pthread_ptr];pthread.worker.terminate();PThread.freeThreadData(pthread);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker),1);pthread.worker.pthread=undefined}function cancelThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in cancelThread!\";var pthread=PThread.pthreads[pthread_ptr];pthread.worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var pthread=PThread.pthreads[pthread_ptr];if(pthread){GROWABLE_HEAP_I32()[pthread_ptr+12>>2]=0;var worker=pthread.worker;PThread.returnWorkerToPool(worker)}}var PThread={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){var pthreadPoolSize=8;for(var i=0;i<pthreadPoolSize;++i){PThread.allocateUnusedWorker()}},initRuntime:function(){var tb=_malloc(228);for(var i=0;i<228/4;++i)GROWABLE_HEAP_U32()[tb/4+i]=0;GROWABLE_HEAP_I32()[tb+12>>2]=tb;var headPtr=tb+152;GROWABLE_HEAP_I32()[headPtr>>2]=headPtr;var tlsMemory=_malloc(512);for(var i=0;i<128;++i)GROWABLE_HEAP_U32()[tlsMemory/4+i]=0;Atomics.store(GROWABLE_HEAP_U32(),tb+100>>2,tlsMemory);Atomics.store(GROWABLE_HEAP_U32(),tb+40>>2,tb);__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1);_emscripten_register_main_browser_thread_id(tb)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){while(PThread.threadExitHandlers.length>0){PThread.threadExitHandlers.pop()()}if(ENVIRONMENT_IS_PTHREAD&&_pthread_self())___pthread_tsd_run_dtors()},runExitHandlersAndDeinitThread:function(tb,exitCode){Atomics.store(GROWABLE_HEAP_U32(),tb+56>>2,1);Atomics.store(GROWABLE_HEAP_U32(),tb+60>>2,0);PThread.runExitHandlers();Atomics.store(GROWABLE_HEAP_U32(),tb+4>>2,exitCode);Atomics.store(GROWABLE_HEAP_U32(),tb+0>>2,1);_emscripten_futex_wake(tb+0,2147483647);__emscripten_thread_init(0,0,0)},threadExit:function(exitCode){var tb=_pthread_self();if(tb){PThread.runExitHandlersAndDeinitThread(tb,exitCode);if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"exit\"})}}},threadCancel:function(){PThread.runExitHandlersAndDeinitThread(_pthread_self(),-1);postMessage({\"cmd\":\"cancelDone\"})},terminateAllThreads:function(){for(var t in PThread.pthreads){var pthread=PThread.pthreads[t];if(pthread&&pthread.worker){PThread.returnWorkerToPool(pthread.worker)}}PThread.pthreads={};for(var i=0;i<PThread.unusedWorkers.length;++i){var worker=PThread.unusedWorkers[i];worker.terminate()}PThread.unusedWorkers=[];for(var i=0;i<PThread.runningWorkers.length;++i){var worker=PThread.runningWorkers[i];var pthread=worker.pthread;PThread.freeThreadData(pthread);worker.terminate()}PThread.runningWorkers=[]},freeThreadData:function(pthread){if(!pthread)return;if(pthread.threadInfoStruct){var tlsMemory=GROWABLE_HEAP_I32()[pthread.threadInfoStruct+100>>2];GROWABLE_HEAP_I32()[pthread.threadInfoStruct+100>>2]=0;_free(tlsMemory);_free(pthread.threadInfoStruct)}pthread.threadInfoStruct=0;if(pthread.allocatedOwnStack&&pthread.stackBase)_free(pthread.stackBase);pthread.stackBase=0;if(pthread.worker)pthread.worker.pthread=null},returnWorkerToPool:function(worker){PThread.runWithoutMainThreadQueuedCalls(function(){delete PThread.pthreads[worker.pthread.threadInfoStruct];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);PThread.freeThreadData(worker.pthread);worker.pthread=undefined})},runWithoutMainThreadQueuedCalls:function(func){GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=0;try{func()}finally{GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=1}},receiveObjectTransfer:function(data){},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=function(e){var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread)PThread.currentProxiedOperationCallerThread=worker.pthread.threadInfoStruct;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var thread=PThread.pthreads[d.targetThread];if(thread){thread.worker.postMessage(e.data,d[\"transferList\"])}else{console.error('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processQueuedMainThreadWork\"){_emscripten_main_thread_process_queued_calls()}else if(cmd===\"spawnThread\"){spawnThread(e.data)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread();delete worker.runPthread}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"exit\"){var detached=worker.pthread&&Atomics.load(GROWABLE_HEAP_U32(),worker.pthread.threadInfoStruct+64>>2);if(detached){PThread.returnWorkerToPool(worker)}}else if(cmd===\"exitProcess\"){try{exit(d[\"returnCode\"])}catch(e){if(e instanceof ExitStatus)return;throw e}}else if(cmd===\"cancelDone\"){PThread.returnWorkerToPool(worker)}else if(cmd===\"objectTransfer\"){PThread.receiveObjectTransfer(e.data)}else if(e.data.target===\"setimmediate\"){worker.postMessage(e.data)}else{err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=function(e){err(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)};if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(data){worker.onerror(data)});worker.on(\"exit\",function(data){})}worker.postMessage({\"cmd\":\"load\",\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");PThread.unusedWorkers.push(new Worker(pthreadMainJs))},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}if(PThread.unusedWorkers.length>0)return PThread.unusedWorkers.pop();else return null},busySpinWait:function(msecs){var t=performance.now()+msecs;while(performance.now()<t){}}};function establishStackSpace(stackTop,stackMax){_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function getNoExitRuntime(){return noExitRuntime}Module[\"getNoExitRuntime\"]=getNoExitRuntime;function invokeEntryPoint(ptr,arg){return wasmTable.get(ptr)(arg)}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ___call_main(argc,argv){var returnCode=_main(argc,argv)}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else if(ENVIRONMENT_IS_PTHREAD){_emscripten_get_now=function(){return performance.now()-Module[\"__performance_now_clock_drift\"]}}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now=dateNow}else _emscripten_get_now=function(){return performance.now()};function setErrNo(value){GROWABLE_HEAP_I32()[___errno_location()>>2]=value;return value}function _atexit(func,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,func,arg)}function __emscripten_notify_thread_queue(targetThreadId,mainThreadId){if(targetThreadId==mainThreadId){postMessage({\"cmd\":\"processQueuedMainThreadWork\"})}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processThreadQueue\"})}else{var pthread=PThread.pthreads[targetThreadId];var worker=pthread&&pthread.worker;if(!worker){return}worker.postMessage({\"cmd\":\"processThreadQueue\"})}return 1}function _abort(){abort()}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_conditional_set_current_thread_status(expectedStatus,newStatus){}function _emscripten_futex_wait(addr,val,timeout){if(addr<=0||addr>GROWABLE_HEAP_I8().length||addr&3!=0)return-28;if(!ENVIRONMENT_IS_WEB){var ret=Atomics.wait(GROWABLE_HEAP_I32(),addr>>2,val,timeout);if(ret===\"timed-out\")return-73;if(ret===\"not-equal\")return-6;if(ret===\"ok\")return 0;throw\"Atomics.wait returned an unexpected value \"+ret}else{if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}var tNow=performance.now();var tEnd=tNow+timeout;var lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr);while(1){tNow=performance.now();if(tNow>tEnd){lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);return-73}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);if(lastAddr==0){break}_emscripten_main_thread_process_queued_calls();if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr)}return 0}}function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest,src,src+num)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var stack=stackSave();var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=arguments[2+i];GROWABLE_HEAP_F64()[b+i]=arg}var ret=_emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync);stackRestore(stack);return ret}var _emscripten_receive_on_main_thread_js_callArgs=[];var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=GROWABLE_HEAP_U8()[sigPtr++]){var double=ch<105;if(double&&buf&1)buf++;readAsmConstArgsArray.push(double?GROWABLE_HEAP_F64()[buf++>>1]:GROWABLE_HEAP_I32()[buf]);++buf}return readAsmConstArgsArray}function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function _emscripten_get_heap_size(){return GROWABLE_HEAP_U8().length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();if(requestedSize<=oldSize){return false}var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},queueEventHandlerOnThread_iiii:function(targetThread,eventHandlerFunc,eventTypeId,eventData,userData){var stackTop=stackSave();var varargs=stackAlloc(12);GROWABLE_HEAP_I32()[varargs>>2]=eventTypeId;GROWABLE_HEAP_I32()[varargs+4>>2]=eventData;GROWABLE_HEAP_I32()[varargs+8>>2]=userData;__emscripten_call_on_thread(0,targetThread,637534208,eventHandlerFunc,eventData,varargs);stackRestore(stackTop)},getTargetThreadForEventCallback:function(targetThread){switch(targetThread){case 1:return 0;case 2:return PThread.currentProxiedOperationCallerThread;default:return targetThread}},getNodeNameForTarget:function(target){if(!target)return\"\";if(target==window)return\"#window\";if(target==screen)return\"#screen\";return target&&target.nodeName?target.nodeName:\"\"},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height){var stackTop=stackSave();var varargs=stackAlloc(12);var targetCanvasPtr=0;if(targetCanvas){targetCanvasPtr=stringToNewUTF8(targetCanvas)}GROWABLE_HEAP_I32()[varargs>>2]=targetCanvasPtr;GROWABLE_HEAP_I32()[varargs+4>>2]=width;GROWABLE_HEAP_I32()[varargs+8>>2]=height;__emscripten_call_on_thread(0,targetThread,657457152,0,targetCanvasPtr,varargs);stackRestore(stackTop)}function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread,targetCanvas,width,height){targetCanvas=targetCanvas?UTF8ToString(targetCanvas):\"\";_emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height)}function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,typeof document!==\"undefined\"?document:0,typeof window!==\"undefined\"?window:0];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||(typeof document!==\"undefined\"?document.querySelector(target):undefined);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_set_canvas_element_size_calling_thread(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;if(canvas.canvasSharedPtr){GROWABLE_HEAP_I32()[canvas.canvasSharedPtr>>2]=width;GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+4>>2]=height}if(canvas.offscreenCanvas||!canvas.controlTransferredOffscreen){if(canvas.offscreenCanvas)canvas=canvas.offscreenCanvas;var autoResizeViewport=false;if(canvas.GLctxObject&&canvas.GLctxObject.GLctx){var prevViewport=canvas.GLctxObject.GLctx.getParameter(2978);autoResizeViewport=prevViewport[0]===0&&prevViewport[1]===0&&prevViewport[2]===canvas.width&&prevViewport[3]===canvas.height}canvas.width=width;canvas.height=height;if(autoResizeViewport){canvas.GLctxObject.GLctx.viewport(0,0,width,height)}}else if(canvas.canvasSharedPtr){var targetThread=GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+8>>2];_emscripten_set_offscreencanvas_size_on_target_thread(targetThread,target,width,height);return 1}else{return-4}return 0}function _emscripten_set_canvas_element_size_main_thread(target,width,height){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,1,target,width,height);return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(canvas){return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}else{return _emscripten_set_canvas_element_size_main_thread(target,width,height)}}function _emscripten_set_current_thread_status(newStatus){}function _emscripten_set_thread_name(threadId,name){}function __webgl_enable_ANGLE_instanced_arrays(ctx){var ext=ctx.getExtension(\"ANGLE_instanced_arrays\");if(ext){ctx[\"vertexAttribDivisor\"]=function(index,divisor){ext[\"vertexAttribDivisorANGLE\"](index,divisor)};ctx[\"drawArraysInstanced\"]=function(mode,first,count,primcount){ext[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)};ctx[\"drawElementsInstanced\"]=function(mode,count,type,indices,primcount){ext[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)};return 1}}function __webgl_enable_OES_vertex_array_object(ctx){var ext=ctx.getExtension(\"OES_vertex_array_object\");if(ext){ctx[\"createVertexArray\"]=function(){return ext[\"createVertexArrayOES\"]()};ctx[\"deleteVertexArray\"]=function(vao){ext[\"deleteVertexArrayOES\"](vao)};ctx[\"bindVertexArray\"]=function(vao){ext[\"bindVertexArrayOES\"](vao)};ctx[\"isVertexArray\"]=function(vao){return ext[\"isVertexArrayOES\"](vao)};return 1}}function __webgl_enable_WEBGL_draw_buffers(ctx){var ext=ctx.getExtension(\"WEBGL_draw_buffers\");if(ext){ctx[\"drawBuffers\"]=function(n,bufs){ext[\"drawBuffersWEBGL\"](n,bufs)};return 1}}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension(\"WEBGL_multi_draw\"))}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},getSource:function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var len=length?GROWABLE_HEAP_I32()[length+i*4>>2]:-1;source+=UTF8ToString(GROWABLE_HEAP_I32()[string+i*4>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){var ctx=canvas.getContext(\"webgl\",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=_malloc(8);GROWABLE_HEAP_I32()[handle+4>>2]=_pthread_self();var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault===\"undefined\"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle].handle);GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\");__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(ext.indexOf(\"lose_context\")<0&&ext.indexOf(\"debug\")<0){GLctx.getExtension(ext)}})},populateUniformTable:function(program){var p=GL.programs[program];var ptable=GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,35718);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.slice(-1)==\"]\"){name=name.slice(0,name.lastIndexOf(\"[\"))}var loc=GLctx.getUniformLocation(p,name);if(loc){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+\"[\"+j+\"]\";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}}};var __emscripten_webgl_power_preferences=[\"default\",\"low-power\",\"high-performance\"];function _emscripten_webgl_do_create_context(target,attributes){var a=attributes>>2;var powerPreference=GROWABLE_HEAP_I32()[a+(24>>2)];var contextAttributes={\"alpha\":!!GROWABLE_HEAP_I32()[a+(0>>2)],\"depth\":!!GROWABLE_HEAP_I32()[a+(4>>2)],\"stencil\":!!GROWABLE_HEAP_I32()[a+(8>>2)],\"antialias\":!!GROWABLE_HEAP_I32()[a+(12>>2)],\"premultipliedAlpha\":!!GROWABLE_HEAP_I32()[a+(16>>2)],\"preserveDrawingBuffer\":!!GROWABLE_HEAP_I32()[a+(20>>2)],\"powerPreference\":__emscripten_webgl_power_preferences[powerPreference],\"failIfMajorPerformanceCaveat\":!!GROWABLE_HEAP_I32()[a+(28>>2)],majorVersion:GROWABLE_HEAP_I32()[a+(32>>2)],minorVersion:GROWABLE_HEAP_I32()[a+(36>>2)],enableExtensionsByDefault:GROWABLE_HEAP_I32()[a+(40>>2)],explicitSwapControl:GROWABLE_HEAP_I32()[a+(44>>2)],proxyContextToMainThread:GROWABLE_HEAP_I32()[a+(48>>2)],renderViaOffscreenBackBuffer:GROWABLE_HEAP_I32()[a+(52>>2)]};var canvas=findCanvasEventTarget(target);if(!canvas){return 0}if(contextAttributes.explicitSwapControl){return 0}var contextHandle=GL.createContext(canvas,contextAttributes);return contextHandle}function _emscripten_webgl_create_context(a0,a1){return _emscripten_webgl_do_create_context(a0,a1)}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,fd);return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd,offset_low,offset_high,whence,newOffset)}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_I32()[iov+i*8>>2];var len=GROWABLE_HEAP_I32()[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,GROWABLE_HEAP_U8()[ptr+j])}num+=len}GROWABLE_HEAP_I32()[pnum>>2]=num;return 0}function _pthread_cleanup_pop(execute){var routine=PThread.threadExitHandlers.pop();if(execute)routine()}function _pthread_cleanup_push(routine,arg){PThread.threadExitHandlers.push(function(){wasmTable.get(routine)(arg)})}function spawnThread(threadParams){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var worker=PThread.getNewWorker();if(worker.pthread!==undefined)throw\"Internal error!\";if(!threadParams.pthread_ptr)throw\"Internal error, no pthread ptr!\";PThread.runningWorkers.push(worker);var tlsMemory=_malloc(128*4);for(var i=0;i<128;++i){GROWABLE_HEAP_I32()[tlsMemory+i*4>>2]=0}var stackHigh=threadParams.stackBase+threadParams.stackSize;var pthread=PThread.pthreads[threadParams.pthread_ptr]={worker:worker,stackBase:threadParams.stackBase,stackSize:threadParams.stackSize,allocatedOwnStack:threadParams.allocatedOwnStack,threadInfoStruct:threadParams.pthread_ptr};var tis=pthread.threadInfoStruct>>2;Atomics.store(GROWABLE_HEAP_U32(),tis+(64>>2),threadParams.detached);Atomics.store(GROWABLE_HEAP_U32(),tis+(100>>2),tlsMemory);Atomics.store(GROWABLE_HEAP_U32(),tis+(40>>2),pthread.threadInfoStruct);Atomics.store(GROWABLE_HEAP_U32(),tis+(80>>2),threadParams.stackSize);Atomics.store(GROWABLE_HEAP_U32(),tis+(76>>2),stackHigh);Atomics.store(GROWABLE_HEAP_U32(),tis+(104>>2),threadParams.stackSize);Atomics.store(GROWABLE_HEAP_U32(),tis+(104+8>>2),stackHigh);Atomics.store(GROWABLE_HEAP_U32(),tis+(104+12>>2),threadParams.detached);var global_libc=_emscripten_get_global_libc();var global_locale=global_libc+40;Atomics.store(GROWABLE_HEAP_U32(),tis+(172>>2),global_locale);worker.pthread=pthread;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"threadInfoStruct\":threadParams.pthread_ptr,\"stackBase\":threadParams.stackBase,\"stackSize\":threadParams.stackSize};worker.runPthread=function(){msg.time=performance.now();worker.postMessage(msg,threadParams.transferList)};if(worker.loaded){worker.runPthread();delete worker.runPthread}}function _pthread_create(pthread_ptr,attr,start_routine,arg){if(typeof SharedArrayBuffer===\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}if(!pthread_ptr){err(\"pthread_create called with a null thread pointer!\");return 28}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return _emscripten_sync_run_in_main_thread_4(687865856,pthread_ptr,attr,start_routine,arg)}if(error)return error;var stackSize=0;var stackBase=0;var detached=0;if(attr&&attr!=-1){stackSize=GROWABLE_HEAP_I32()[attr>>2];stackSize+=81920;stackBase=GROWABLE_HEAP_I32()[attr+8>>2];detached=GROWABLE_HEAP_I32()[attr+12>>2]!==0}else{stackSize=2097152}var allocatedOwnStack=stackBase==0;if(allocatedOwnStack){stackBase=_memalign(16,stackSize)}else{stackBase-=stackSize;assert(stackBase>0)}var threadInfoStruct=_malloc(228);for(var i=0;i<228>>2;++i)GROWABLE_HEAP_U32()[(threadInfoStruct>>2)+i]=0;GROWABLE_HEAP_I32()[pthread_ptr>>2]=threadInfoStruct;GROWABLE_HEAP_I32()[threadInfoStruct+12>>2]=threadInfoStruct;var headPtr=threadInfoStruct+152;GROWABLE_HEAP_I32()[headPtr>>2]=headPtr;var threadParams={stackBase:stackBase,stackSize:stackSize,allocatedOwnStack:allocatedOwnStack,detached:detached,startRoutine:start_routine,pthread_ptr:threadInfoStruct,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList)}else{spawnThread(threadParams)}return 0}function __pthread_testcancel_js(){if(!ENVIRONMENT_IS_PTHREAD)return;var tb=_pthread_self();if(!tb)return;var cancelDisabled=Atomics.load(GROWABLE_HEAP_U32(),tb+56>>2);if(cancelDisabled)return;var canceled=Atomics.load(GROWABLE_HEAP_U32(),tb+0>>2);if(canceled==2)throw\"Canceled!\"}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_NODE)return;if(ENVIRONMENT_IS_WORKER)return;warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")}function __emscripten_do_pthread_join(thread,status,block){if(!thread){err(\"pthread_join attempted on a null thread pointer!\");return ERRNO_CODES.ESRCH}if(ENVIRONMENT_IS_PTHREAD&&_pthread_self()==thread){err(\"PThread \"+thread+\" is attempting to join to itself!\");return ERRNO_CODES.EDEADLK}else if(!ENVIRONMENT_IS_PTHREAD&&_emscripten_main_browser_thread_id()==thread){err(\"Main thread \"+thread+\" is attempting to join to itself!\");return ERRNO_CODES.EDEADLK}var self=GROWABLE_HEAP_I32()[thread+12>>2];if(self!==thread){err(\"pthread_join attempted on thread \"+thread+\", which does not point to a valid thread, or does not exist anymore!\");return ERRNO_CODES.ESRCH}var detached=Atomics.load(GROWABLE_HEAP_U32(),thread+64>>2);if(detached){err(\"Attempted to join thread \"+thread+\", which was already detached!\");return ERRNO_CODES.EINVAL}if(block){_emscripten_check_blocking_allowed()}for(;;){var threadStatus=Atomics.load(GROWABLE_HEAP_U32(),thread+0>>2);if(threadStatus==1){var threadExitCode=Atomics.load(GROWABLE_HEAP_U32(),thread+4>>2);if(status)GROWABLE_HEAP_I32()[status>>2]=threadExitCode;Atomics.store(GROWABLE_HEAP_U32(),thread+64>>2,1);if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({\"cmd\":\"cleanupThread\",\"thread\":thread});return 0}if(!block){return ERRNO_CODES.EBUSY}__pthread_testcancel_js();if(!ENVIRONMENT_IS_PTHREAD)_emscripten_main_thread_process_queued_calls();_emscripten_futex_wait(thread+0,threadStatus,ENVIRONMENT_IS_PTHREAD?100:1)}}function _pthread_join(thread,status){return __emscripten_do_pthread_join(thread,status,true)}function _sysconf(name){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,name);switch(name){case 30:return 16384;case 85:var maxHeapSize=2147483648;return maxHeapSize/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}setErrNo(28);return-1}if(!ENVIRONMENT_IS_PTHREAD)PThread.initMainThreadBlock();var GLctx;var proxiedFunctionTable=[null,_atexit,_emscripten_set_canvas_element_size_main_thread,_fd_close,_fd_seek,_fd_write,_sysconf];var asmLibraryArg={\"e\":___assert_fail,\"r\":___call_main,\"x\":__emscripten_notify_thread_queue,\"b\":_abort,\"y\":_emscripten_asm_const_int,\"j\":_emscripten_conditional_set_current_thread_status,\"d\":_emscripten_futex_wait,\"c\":_emscripten_futex_wake,\"f\":_emscripten_get_now,\"p\":_emscripten_memcpy_big,\"A\":_emscripten_num_logical_cores,\"u\":_emscripten_receive_on_main_thread_js,\"q\":_emscripten_resize_heap,\"v\":_emscripten_set_canvas_element_size,\"i\":_emscripten_set_current_thread_status,\"s\":_emscripten_set_thread_name,\"w\":_emscripten_webgl_create_context,\"l\":_fd_close,\"n\":_fd_seek,\"g\":_fd_write,\"o\":initPthreadsJS,\"a\":wasmMemory||Module[\"wasmMemory\"],\"z\":_pthread_cleanup_pop,\"k\":_pthread_cleanup_push,\"h\":_pthread_create,\"m\":_pthread_join,\"t\":_sysconf};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Ua\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Za\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"_a\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"$a\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"ab\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"bb\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"cb\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"db\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"eb\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"fb\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"gb\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"hb\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"ib\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"jb\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"kb\"]).apply(null,arguments)};var _emscripten_get_global_libc=Module[\"_emscripten_get_global_libc\"]=function(){return(_emscripten_get_global_libc=Module[\"_emscripten_get_global_libc\"]=Module[\"asm\"][\"lb\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"mb\"]).apply(null,arguments)};var ___pthread_tsd_run_dtors=Module[\"___pthread_tsd_run_dtors\"]=function(){return(___pthread_tsd_run_dtors=Module[\"___pthread_tsd_run_dtors\"]=Module[\"asm\"][\"nb\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"ob\"]).apply(null,arguments)};var _emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=function(){return(_emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=Module[\"asm\"][\"pb\"]).apply(null,arguments)};var _emscripten_register_main_browser_thread_id=Module[\"_emscripten_register_main_browser_thread_id\"]=function(){return(_emscripten_register_main_browser_thread_id=Module[\"_emscripten_register_main_browser_thread_id\"]=Module[\"asm\"][\"qb\"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=function(){return(_emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=Module[\"asm\"][\"rb\"]).apply(null,arguments)};var __emscripten_do_dispatch_to_thread=Module[\"__emscripten_do_dispatch_to_thread\"]=function(){return(__emscripten_do_dispatch_to_thread=Module[\"__emscripten_do_dispatch_to_thread\"]=Module[\"asm\"][\"sb\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=function(){return(_emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=Module[\"asm\"][\"tb\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"ub\"]).apply(null,arguments)};var __emscripten_call_on_thread=Module[\"__emscripten_call_on_thread\"]=function(){return(__emscripten_call_on_thread=Module[\"__emscripten_call_on_thread\"]=Module[\"asm\"][\"vb\"]).apply(null,arguments)};var _emscripten_tls_init=Module[\"_emscripten_tls_init\"]=function(){return(_emscripten_tls_init=Module[\"_emscripten_tls_init\"]=Module[\"asm\"][\"wb\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"xb\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"yb\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"zb\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"Ab\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"Bb\"]).apply(null,arguments)};var _memalign=Module[\"_memalign\"]=function(){return(_memalign=Module[\"_memalign\"]=Module[\"asm\"][\"Cb\"]).apply(null,arguments)};var __emscripten_allow_main_runtime_queued_calls=Module[\"__emscripten_allow_main_runtime_queued_calls\"]=10512;var __emscripten_main_thread_futex=Module[\"__emscripten_main_thread_futex\"]=12148;Module[\"cwrap\"]=cwrap;Module[\"PThread\"]=PThread;Module[\"PThread\"]=PThread;Module[\"wasmMemory\"]=wasmMemory;Module[\"ExitStatus\"]=ExitStatus;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();postMessage({\"cmd\":\"loaded\"});return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&noExitRuntime&&status===0){return}if(!implicit){if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"exitProcess\",\"returnCode\":status});throw new ExitStatus(status)}else{}}if(noExitRuntime){}else{PThread.terminateAllThreads();EXITSTATUS=status;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status);ABORT=true}quit_(status,new ExitStatus(status))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}if(ENVIRONMENT_IS_PTHREAD){noExitRuntime=false;PThread.initWorker()}run();\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;__ATINIT__.push({func:function(){___wasm_call_ctors()}});function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"j\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"r\"];removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _pthread_create(){return 6}function _pthread_join(){return 28}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function _sysconf(name){switch(name){case 30:return 16384;case 85:var maxHeapSize=2147483648;return maxHeapSize/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}setErrNo(28);return-1}var asmLibraryArg={\"a\":_abort,\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"f\":_fd_close,\"c\":_fd_seek,\"b\":_fd_write,\"h\":_pthread_create,\"g\":_pthread_join,\"i\":_sysconf};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"k\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"o\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"p\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"q\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"s\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Ua\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport {BackendWasmThreadedSimdModule} from '../wasm-out/tfjs-backend-wasm-threaded-simd';\nimport wasmFactoryThreadedSimd from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  refCount: number;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule|BackendWasmThreadedSimdModule) {\n    super();\n    this.wasm.tfjs.initWithThreadsCount(threadsCount);\n    actualThreadsCount = this.wasm.tfjs.getThreadsCount();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {id: this.dataIdNextNumber++};\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType, refCount: number): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId,\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId): backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      return stringBytes;\n    }\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset,\n        memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  disposeData(dataId: DataId, force = false): boolean {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n\n  /** Return refCount of a `TensorData`. */\n  refCount(dataId: DataId): number {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  incRef(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    if ('PThread' in this.wasm) {\n      this.wasm.PThread.terminateAllThreads();\n    }\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {id};\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\n\nfunction createInstantiateWasmFunc(path: string) {\n  // this will be replace by rollup plugin patchWechatWebAssembly in\n  // minprogram's output.\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance, output.module);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(\n    simdSupported: boolean, threadsSupported: boolean,\n    wasmModuleFolder: string) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n\n  return wasmModuleFolder + path;\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const [simdSupported, threadsSupported] = await Promise.all([\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n  ]);\n\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        const response = wasmWorkerContents;\n        const blob = new Blob([response], {type: 'application/javascript'});\n        return URL.createObjectURL(blob);\n      }\n\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(\n            simdSupported as boolean, threadsSupported as boolean,\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm =\n          createInstantiateWasmFunc(getPathToWasmBinary(\n              simdSupported as boolean, threadsSupported as boolean,\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n\n    let wasm: Promise<BackendWasmModule>;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\n          [`var WasmBackendModuleThreadedSimd = ` +\n           wasmFactoryThreadedSimd.toString()],\n          {type: 'text/javascript'});\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n\n    // The WASM module has been successfully created by the factory.\n    // Any error will be caught by the onAbort callback defined above.\n    wasm.then((module) => {\n      initialized = true;\n      initAborted = false;\n\n      const voidReturnType: string = null;\n      // Using the tfjs namespace to avoid conflict with emscripten's API.\n      module.tfjs = {\n        init: module.cwrap('init', null, []),\n        initWithThreadsCount:\n            module.cwrap('init_with_threads_count', null, ['number']),\n        getThreadsCount: module.cwrap('get_threads_count', 'number', []),\n        registerTensor: module.cwrap(\n            'register_tensor', null,\n            [\n              'number',  // id\n              'number',  // size\n              'number',  // memoryOffset\n            ]),\n        disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\n        dispose: module.cwrap('dispose', voidReturnType, []),\n      };\n\n      resolve({wasm: module});\n    });\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nconst wasmBinaryNames = [\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n  'tfjs-backend-wasm-threaded-simd.wasm'\n] as const ;\ntype WasmBinaryName = typeof wasmBinaryNames[number];\n\nlet wasmPath: string = null;\nlet wasmPathPrefix: string = null;\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\nlet initAborted = false;\nlet customFetch = false;\n\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  deprecationWarn(\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\n      ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\n    usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n        '`tf.ready()`');\n  }\n\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths =\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(\n          `There were no entries found for the following binaries: ` +\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n          `map providing a path for each binary, or with a string indicating ` +\n          `the directory where all the binaries can be found.`);\n    }\n  }\n\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\n\nlet threadsCount = -1;\nlet actualThreadsCount = -1;\n\n/**\n * Sets the number of threads that will be used by XNNPACK to create\n * threadpool (default to the number of logical CPU cores).\n *\n * This must be called before calling `tf.setBackend('wasm')`.\n */\nexport function setThreadsCount(numThreads: number) {\n  threadsCount = numThreads;\n}\n\n/**\n * Gets the actual threads count that is used by XNNPACK.\n *\n * It is set after the backend is intialized.\n */\nexport function getThreadsCount(): number {\n  if (actualThreadsCount === -1) {\n    throw new Error(`WASM backend not initialized.`);\n  }\n  return actualThreadsCount;\n}\n","export const wasmWorkerContents = 'var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;this.alert=threadAlert;Module[\"instantiateWasm\"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);Module[\"wasmModule\"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob===\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd===\"objectTransfer\"){Module[\"PThread\"].receiveObjectTransfer(e.data)}else if(e.data.cmd===\"run\"){Module[\"__performance_now_clock_drift\"]=performance.now()-e.data.time;Module[\"__emscripten_thread_init\"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module[\"establishStackSpace\"](top,max);Module[\"_emscripten_tls_init\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].setThreadStatus(Module[\"_pthread_self\"](),1);try{var result=Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg);if(!Module[\"getNoExitRuntime\"]())Module[\"PThread\"].threadExit(result)}catch(ex){if(ex===\"Canceled!\"){Module[\"PThread\"].threadCancel()}else if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"getNoExitRuntime\"]()){}else{Module[\"PThread\"].threadExit(ex.status)}}else{Module[\"PThread\"].threadExit(-2);throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"PThread\"].threadCancel()}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processThreadQueue\"){if(Module[\"_pthread_self\"]()){Module[\"_emscripten_current_thread_process_queued_calls\"]()}}else{err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){err(\"worker.js onmessage() captured an uncaught exception: \"+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require(\"worker_threads\");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",function(data){onmessage({data:data})});var nodeFS=require(\"fs\");var nodeRead=function(filename){return nodeFS.readFileSync(filename,\"utf8\")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance===\"undefined\"){performance={now:function(){return Date.now()}}}}';","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '3.11.0';\nexport {version};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport './flags_wasm';\n\nimport {registerBackend} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm, init} from './backend_wasm';\n\nexport {BackendWasm, getThreadsCount, setThreadsCount, setWasmPath, setWasmPaths} from './backend_wasm';\nexport {version as version_wasm} from './version';\n\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n"],"names":["CppDType","FusableActivation","wasmFusedMatMul","fusedMatMulConfig","kernelName","_FusedMatMul","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","a","b","bias","preluActivationWeights","dtype","Error","transposeA","transposeB","activation","leakyreluAlpha","aId","dataIdMap","get","dataId","id","bId","biasId","biasData","shape","length","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDim","out","makeOutput","outId","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","createUnaryKernelConfig","outType","wasmFunc","x","xId","util","sizeFromShape","absConfig","Abs","createBinaryKernelConfig","supportsFullBroadcast","outputType","newShape","backend_util","assertAndGetBroadcastShape","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","addConfig","Add","addNConfig","AddN","inputIds","map","inputIdsBytes","identity","inVals","typedArrayFromHeap","set","identityConfig","Identity","wasmTranspose","transpose","reducedShape","perm","newPerm","push","minValIdx","j","removeOneSizeDims","permIsNoOp","outShape","inShape","Array","computeOutShape","cloned","permBytes","xShapeBytes","transposeConfig","Transpose","permuteAxesAndTranspose","axis","xShape","xRank","originalAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","xTransposed","inputWasTransposed","getInnerMostAxes","transposed","wasmAll","allConfig","All","keepDims","inputId","input","inputRank","assertAxesAreInnerMostDims","reduceShape","computeOutAndReduceShapes","reduceSize","disposeData","expandShapeToKeepDim","wasmAny","anyConfig","Any","argMaxConfig","ArgMax","transposedId","slice","outerSize","innerSize","wasmAvgPool","avgPoolConfig","AvgPool","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","reshape","xSize","$shape","inferFromImplicitShape","assert","incRef","reshapeConfig","Reshape","wasmBatchMatMul","batchMatMulConfig","BatchMatMul","aRank","bRank","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","batchDimsCompatible","concat","b3dShape","a3d","b3d","a3dId","b3dId","Math","max","sliceImpl","vals","begin","size","isContinous","slice_util","isSliceContinous","xStrides","computeStrides","flatOffset","computeFlatOffset","subarray","decodedData","fromUint8ToStringArray","inBuf","outBuf","outLoc","indexToLoc","inLoc","idx","fromStringArrayToUint8","values","begin_","size_","parseSliceParams","xVals","readSync","outData","stringBytes","res","sliceImplCPU","outVals","rank","xStride","outOffset","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","slice3d","xStride3","endK","beginL","k","slice4d","sliceConfig","Slice","batchToSpaceNDConfig","BatchToSpaceND","blockShape","crops","prod","reduce","reshaped","getReshaped","permuted","getPermuted","reshapedPermuted","getReshapedPermuted","sliceBeginCoords","getSliceBeginCoords","sliceSize","getSliceSize","xReshaped","result","cast","castConfig","Cast","ceilConfig","Ceil","wasmClip","clipByValueConfig","ClipByValue","clipValueMin","clipValueMax","t","$inputs","filter","shapes","assertParamsConsistent","inputs2D","inputsValShapes","simplyConcat","getArrayFromDType","offset","forEach","colOffset","tIdx","row","resIdx","col","concatImplCPU","finalOutShape","sumInnerDims","innerDims","innerDim","inOffset","concatConfig","Concat","wasmConv2d","conv2DConfig","Conv2D","filterId","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","wasmConv2DBackpropInput","conv2DBackpropInputConfig","Conv2DBackpropInput","dy","inputShape","batchSize","inHeight","inWidth","outHeight","outWidth","topPad","leftPad","isChannelsLast","dxStrides","dyStrides","fltS0","fltS1","fltS2","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","dyId","cosConfig","Cos","coshConfig","Cosh","InterpolationMethod","wasmCropAndResize","cropAndResizeConfig","CropAndResize","method","extrapolationValue","cropSize","image","boxes","boxInd","numBoxes","cropHeight","cropWidth","castedData","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","wasmCumsum","cumsumConfig","Cumsum","exclusive","reverse","permutation","permutedX","permutedAxis","permutedOut","finalDim","permutedXId","permutedOutId","getUndoAxesPermutation","wasmDepthToSpace","depthToSpaceConfig","DepthToSpace","blockSize","outputHeight","outputWidth","outputDepth","outputShape","xStridesBytes","outputShapeBytes","outStridesBytes","wasmDepthwiseConv2d","depthwiseConv2dNativeConfig","DepthwiseConv2dNative","$dilations","eluConfig","Elu","equalConfig","Equal","expConfig","Exp","expandDims","dim","$dim","splice","expandDimsConfig","ExpandDims","fill","value","fillConfig","Fill","wasmFlipLeftRight","flipLeftRightConfig","FlipLeftRight","imageId","batch","imageHeight","imageWidth","numChannels","floorConfig","Floor","floorDivConfig","FloorDiv","wasmBatchNorm","fusedBatchNormConfig","FusedBatchNorm","varianceEpsilon","mean","variance","scale","meanId","varianceId","offsetId","scaleId","wasmFusedConv2d","fusedConv2DConfig","FusedConv2D","wasmFusedDepthwiseConv2d","fusedDepthwiseConv2DConfig","FusedDepthwiseConv2D","wasmGatherNd","gatherNdConfig","GatherNd","params","indices","resultShape","numSlices","gather_util","prepareAndValidate","indicesShape","sliceRank","indicesId","stridesBytes","wasmGather","gatherV2Config","GatherV2","batchDims","parsedAxis","indicesVals","axisDim","index","shapeInfo","segment_util","collectGatherOpShapeInfo","flattenX","dimSize","indicesSize","flattenIndex","flattenOutputShape","stridesSize","greaterConfig","Greater","greaterEqualConfig","GreaterEqual","leakyReluConfig","LeakyRelu","alpha","lessConfig","Less","lessEqualConfig","LessEqual","logConfig","Log","logicalAndConfig","LogicalAnd","wasmMax","maxConfig","Max","reductionIndices","maximumConfig","Maximum","wasmMaxPool","maxPoolConfig","MaxPool","wasmMean","meanConfig","Mean","reductionAxes","castedInput","wasmMin","minConfig","Min","minimumConfig","Minimum","MirrorPaddingMode","wasmMirrorPad","mirrorPadConfig","MirrorPad","paddings","mode","p","prePaddingsFlat","padTuple","postPaddingsFlat","prePaddingsBytes","postPaddingsBytes","multiplyConfig","Multiply","negConfig","Neg","parseResultStruct","resOffset","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","nonMaxSuppressionV3Config","NonMaxSuppressionV3","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","nonMaxSuppressionV4Config","NonMaxSuppressionV4","padToMaxOutputSize","nonMaxSuppressionV5Config","NonMaxSuppressionV5","softNmsSigma","notEqualConfig","NotEqual","wasmOneHot","oneHotConfig","OneHot","depth","onValue","offValue","onesLikeConfig","OnesLike","packConfig","Pack","assertShapesMatch","intermediateTensorInfos","expandedT","wasmPadV2","padV2Config","PadV2","constantValue","powConfig","Pow","wasmPrelu","preluConfig","Prelu","weightsId","wasmProd","prodConfig","Prod","rangeConfig","Range","start","stop","step","makeZerosTypedArray","numElements","abs","ceil","rangeImplCPU","realDivConfig","RealDiv","reluConfig","Relu","relu6Config","Relu6","wasmResizeBilinear","resizeBilinearConfig","ResizeBilinear","images","alignCorners","halfPixelCenters","newHeight","newWidth","oldHeight","oldWidth","xData","wasmReverse","reverseConfig","Reverse","dims","axesBytes","outShapeBytes","wasmRotate","rotateWithOffsetConfig","RotateWithOffset","radians","fillValue","center","centerX","centerY","getImageCenter","fillValues","fillBytes","roundConfig","Round","rsqrtConfig","Rsqrt","wasmScatterNd","scatterNdConfig","ScatterNd","updates","numUpdates","outputSize","scatter_util","calculateShapes","updatesId","wasmSelect","selectConfig","Select","condition","e","conditionId","tId","eId","cRank","tRank","sigmoidConfig","Sigmoid","sinConfig","Sin","softmaxConfig","Softmax","logits","spaceToBatchNDConfig","SpaceToBatchND","completePaddings","paddedX","reshapedPaddedShape","permutedReshapedPaddedPermutation","flattenShape","paddedXReshaped","paddedXT","splitVConfig","SplitV","numOrSizeSplits","$axis","splitSizes","prepareSplitSize","s","xSliceSize","xSlice","sqrtConfig","Sqrt","squareConfig","Square","squaredDifferenceConfig","SquaredDifference","wasmStep","stepConfig","Step","wasmStridedSlice","stridedSliceConfig","StridedSlice","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","finalShapeSparse","finalShape","isIdentity","sliceDim0","isSimpleSlice","$begin","$end","$strides","sliceInfo","sliced","beginBytes","endBytes","subConfig","Sub","wasmSum","sumConfig","Sum","tanConfig","Tan","tanhConfig","Tanh","wasmTile","wasmTopK","wasmTransform","kernelConfigs","Tile","reps","newShapeBytes","TopK","sorted","outValues","outValuesId","outIndices","outIndicesId","Transform","transforms","interpolation","fillMode","transformsId","interpolationModeId","fillModeId","Unpack","numOutputs","outIndex","outs","ZerosLike","kernelConfig","registerKernel","ENV","env","registerFlag","async","WebAssembly","validate","MessageChannel","port1","postMessage","SharedArrayBuffer","_scriptDir","WasmBackendModuleThreadedSimd","document","currentScript","src","undefined","__filename","GROWABLE_HEAP_I8","wasmMemory","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","key","moduleOverrides","hasOwnProperty","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","ENVIRONMENT_IS_PTHREAD","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","nodeWorkerThreads","require$$0","dirname","__dirname","filename","binary","require$$1","ret","replace","ex","ExitStatus","abort","require$$2","console","error","global","Worker","read","f","data","readbuffer","scriptArgs","quit","print","log","warn","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","performance","require$$3","wasmBinary","bind","err","warnOnce","text","shown","wasmModule","noExitRuntime","ABORT","getCFunc","ident","func","ccall","returnType","argTypes","opts","toC","string","str","len","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","cArgs","stack","converter","stackSave","apply","UTF8ToString","Boolean","convertReturnValue","stackRestore","numericArgs","arguments","UTF8ArrayToString","heap","maxBytesToRead","endIdx","u0","u1","u2","String","fromCharCode","ch","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","lengthBytesUTF8","alignUp","multiple","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","initial","maximum","shared","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","___wasm_call_ctors","runDependencies","dependenciesFulfilled","addRunDependency","removeRunDependency","callback","what","RuntimeError","hasPrefix","prefix","prototype","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","numWorkersToLoad","PThread","unusedWorkers","w","loadWasmModuleToWorker","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","ASM_CONSTS","10520","10538","$0","$1","setTimeout","__emscripten_do_dispatch_to_thread","initPthreadsJS","callbacks","arg","ERRNO_CODES","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","EWOULDBLOCK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EDEADLK","ENOLCK","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EDEADLOCK","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","ENOSYS","ENOTEMPTY","ENAMETOOLONG","ELOOP","EOPNOTSUPP","EPFNOSUPPORT","ECONNRESET","ENOBUFS","EAFNOSUPPORT","EPROTOTYPE","ENOTSOCK","ENOPROTOOPT","ESHUTDOWN","ECONNREFUSED","EADDRINUSE","ECONNABORTED","ENETUNREACH","ENETDOWN","ETIMEDOUT","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EALREADY","EDESTADDRREQ","EMSGSIZE","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EADDRNOTAVAIL","ENETRESET","EISCONN","ENOTCONN","ETOOMANYREFS","EUSERS","EDQUOT","ESTALE","ENOTSUP","ENOMEDIUM","EILSEQ","EOVERFLOW","ECANCELED","ENOTRECOVERABLE","EOWNERDEAD","ESTRPIPE","_emscripten_futex_wake","addr","count","Infinity","mainThreadWaitAddress","Atomics","load","__emscripten_main_thread_futex","mainThreadWoken","compareExchange","notify","killThread","pthread_ptr","pthread","pthreads","worker","terminate","freeThreadData","runningWorkers","cancelThread","cmd","cleanupThread","returnWorkerToPool","_emscripten_get_now","initMainThreadBlock","allocateUnusedWorker","tb","_malloc","headPtr","tlsMemory","store","__emscripten_thread_init","_emscripten_register_main_browser_thread_id","initWorker","threadExitHandlers","setThreadStatus","runExitHandlers","pop","_pthread_self","___pthread_tsd_run_dtors","runExitHandlersAndDeinitThread","exitCode","threadExit","threadCancel","terminateAllThreads","threadInfoStruct","allocatedOwnStack","stackBase","runWithoutMainThreadQueuedCalls","__emscripten_allow_main_runtime_queued_calls","receiveObjectTransfer","onFinishedLoading","onmessage","d","currentProxiedOperationCallerThread","thread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","loaded","runPthread","alert","exit","target","lineno","message","on","urlOrBlob","pthreadMainJs","getNewWorker","busySpinWait","msecs","now","establishStackSpace","stackTop","stackMax","_emscripten_stack_set_limits","getNoExitRuntime","invokeEntryPoint","___assert_fail","line","___call_main","argc","argv","_main","setErrNo","___errno_location","_atexit","_emscripten_proxy_to_main_thread_js","__emscripten_notify_thread_queue","targetThreadId","mainThreadId","_abort","_emscripten_asm_const_int","code","sigPtr","argbuf","readAsmConstArgs","_emscripten_conditional_set_current_thread_status","expectedStatus","newStatus","_emscripten_futex_wait","val","timeout","tNow","tEnd","exchange","wait","_emscripten_memcpy_big","dest","num","copyWithin","_emscripten_num_logical_cores","require$$4","cpus","navigator","sync","numCallArgs","serializedNumCallArgs","_emscripten_run_in_main_runtime_thread_js","dateNow","_emscripten_receive_on_main_thread_js_callArgs","readAsmConstArgsArray","double","_emscripten_receive_on_main_thread_js","proxiedFunctionTable","_emscripten_get_heap_size","emscripten_realloc_buffer","grow","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","min","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","call","sort","y","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","event","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","varargs","__emscripten_call_on_thread","getTargetThreadForEventCallback","getNodeNameForTarget","screen","nodeName","fullscreenEnabled","webkitFullscreenEnabled","stringToNewUTF8","jsString","cString","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","targetCanvasPtr","_emscripten_set_offscreencanvas_size_on_target_thread","maybeCStringToJsString","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","_emscripten_set_canvas_element_size","_emscripten_set_current_thread_status","_emscripten_set_thread_name","threadId","name","__webgl_enable_ANGLE_instanced_arrays","ctx","ext","getExtension","divisor","first","primcount","__webgl_enable_OES_vertex_array_object","vao","__webgl_enable_WEBGL_draw_buffers","n","bufs","__webgl_enable_WEBGL_multi_draw","multiDrawWebgl","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","uniforms","shaders","vaos","contexts","offscreenCanvases","timerQueriesEXT","programInfos","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","source","createContext","webGLContextAttributes","getContext","registerContext","handle","context","attributes","version","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","disjointTimerQueryExt","getSupportedExtensions","populateUniformTable","program","ptable","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","utable","numUniforms","getProgramParameter","getActiveUniform","loc","getUniformLocation","__emscripten_webgl_power_preferences","_emscripten_webgl_do_create_context","powerPreference","contextAttributes","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","_emscripten_webgl_create_context","a0","a1","SYSCALLS","mappings","printChar","stream","curr","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","_pthread_cleanup_pop","execute","routine","_pthread_cleanup_push","threadParams","stackHigh","stackSize","tis","detached","global_locale","_emscripten_get_global_libc","msg","start_routine","startRoutine","time","transferList","_pthread_create","attr","_emscripten_sync_run_in_main_thread_4","_memalign","__pthread_testcancel_js","_emscripten_check_blocking_allowed","__emscripten_do_pthread_join","block","_emscripten_main_browser_thread_id","threadStatus","threadExitCode","_pthread_join","_sysconf","calledRun","r","c","A","q","l","g","o","z","m","this","run","doRun","implicit","returnCode","runCaller","ready","WasmBackendModule","UTF8Decoder","TextDecoder","endPtr","decode","BackendWasm","KernelBackend","[object Object]","super","tfjs","initWithThreadsCount","threadsCount","actualThreadsCount","getThreadsCount","DataStorage","engine","dataIdNextNumber","move","numDataIds","kernelMs","refCount","memoryOffset","numBytes","bytesPerElement","registerTensor","byteOffset","typedArrayFromBuffer","force","has","delete","dispose","unreliable","write","getPathToWasmBinary","simdSupported","threadsSupported","wasmModuleFolder","wasmPath","wasmFileMap","init","all","getAsync","factoryConfig","endsWith","blob","Blob","URL","createObjectURL","wasmPathPrefix","customFetch","instantiateWasm","imports","arrayBuffer","createInstantiateWasmFunc","initialized","onAbort","initAborted","mainScriptUrlOrBlob","wasmFactoryThreadedSimd","toString","wasmFactory","wasmBinaryNames","setWasmPath","usePlatformFetch","deprecationWarn","setWasmPaths","prefixOrFileMap","missingPaths","join","setThreadsCount","numThreads","registerBackend"],"mappings":"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DC,GAAgC,CACpCnoB,GACAgB,GACAE,GACA4C,GACAa,GACAE,GACAO,GACAmC,GACAyE,GACAmB,GACAE,GACAG,GACA0B,GACAG,GACAa,GACA0B,GACAE,GACAI,GACAkB,GACAa,GACAW,GACAG,GACAE,GACAE,GACAM,GACAI,GACAG,GACAO,GACAE,GACA7Z,GACAga,GACAW,GACAG,GACAG,GACAa,GACAgB,GACAE,GACAjY,GACAmY,GACAG,GACAE,GACAE,GACAE,GACAG,GACAG,GACAG,GACAG,GACAK,GACAE,GACAI,GACAU,GACAE,GACAU,GACAO,GACAG,GACAG,GACAG,GACAK,GACAE,GACAM,GACAG,GACAG,GACAI,GACAE,GACAU,GACAE,GACAE,GACAvZ,GACA0Z,GACAW,GACAM,GACAY,GACAF,GACAK,GACAS,GACAS,GACAE,GACApY,GACAsY,GACAG,GACAS,GACAS,GACAE,GACAE,GACAG,GACAG,GACAoB,GACAG,GACAE,GACAE,GJrJsC,CACtCjrB,WAAYurB,GACZrrB,YAAa,OACbC,UApCF,SAAeC,GACb+qB,GAAW/qB,EAAQC,KAAKC,MAAMirB,GAAM,KAAiB,CACnD,SACA,QACA,SACA,QACA,SACA,YA8BFhrB,WA1BF,SACIC,GACF,MAAMC,OAACA,EAAML,QAAEA,EAAOM,MAAEA,GAASF,GAC3BuC,EAACA,GAAKtC,EACNuC,EAAM5C,EAAQkB,UAAUC,IAAIwB,EAAEvB,QAAQC,IACtC+pB,KAACA,GAAQ9qB,EAET8C,EAAqB,IAAIoC,MAAM7C,EAAElB,MAAMC,QAC7C,IAAK,IAAImC,EAAI,EAAGA,EAAIT,EAAS1B,OAAQmC,IACnCT,EAASS,GAAKlB,EAAElB,MAAMoC,GAAKunB,EAAKvnB,GAElC,MAAM+B,EAAc,IAAIxD,WAAW,IAAIC,WAAWM,EAAElB,OAAOa,QACrD+oB,EAAgB,IAAIjpB,WAAW,IAAIC,WAAWe,GAAUd,QAExDN,EAAMhC,EAAQiC,WAAWmB,EAAUT,EAAEhC,OACrCuB,EAAQlC,EAAQkB,UAAUC,IAAIa,EAAIZ,QAAQC,GAIhD,OAHA0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AI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,OAAO,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,EAAE,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE,KAAK,IAAI,KAAK,EAAE,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,OAAO,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,WAAW,KAAK,GAAG,KAAK,EAAE,OAAO,MAAM,KAAK,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,KAAK,KAAK,EAAE,OAAO,QAAQ,KAAK,EAAE,OAAO,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,EAAE,OAAO,IAAI,KAAK,IAAI,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,EAAE,OAAO,GAAG,KAAK,EAAE,OAAO,EA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"}